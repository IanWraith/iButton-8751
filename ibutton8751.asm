		.ORG 0

		; CLEAR THE SIGNAL BITS *
		MOV P1,#0

MAIN:   ; TEST IF A TOUCH MEMORY IS PRESENT *
		LCALL TOCHRST
		; CARRY BIT IS SET IF DEVICE PRESENT *
		JNC MAIN
		MOV 28H,#0
		; SEND A 0FH READ ROM COMMAND TO THE BUTTON *
		MOV A,#0FH
		LCALL TBYTE
		; GET 8 BYTES BACK FROM THE BUTTON *
		; SET A TO FFH WHEN READING *
		MOV A,#0FFH
		LCALL TBYTE
		MOV 20H,A
		MOV A,#0FFH
		LCALL TBYTE
		MOV 21H,A
		MOV A,#0FFH
		LCALL TBYTE
		MOV 22H,A
		MOV A,#0FFH
		LCALL TBYTE
		MOV 23H,A
		MOV A,#0FFH
		LCALL TBYTE
		MOV 24H,A
		MOV A,#0FFH
		LCALL TBYTE
		MOV 25H,A
		MOV A,#0FFH
		LCALL TBYTE
		MOV 26H,A
		MOV A,#0FFH
		LCALL TBYTE
		MOV 27H,A

		; IS THIS A DS1990 DEVICE ? *
		MOV A,#01H
		CJNE A,20H,MAIN

		; CRC CHECK THIS *
		MOV A,20H
		LCALL DO_CRC
		MOV A,21H
		LCALL DO_CRC
		MOV A,22H
		LCALL DO_CRC
		MOV A,23H
		LCALL DO_CRC
		MOV A,24H
		LCALL DO_CRC
		MOV A,25H
		LCALL DO_CRC
		MOV A,26H
		LCALL DO_CRC
		; * DO WE HAVE A MATCH *
		MOV A,27H
		CJNE A,28H,MAIN

		SETB P1.0

		; KEY THE KEY'S NUMBER TO SEE IF VALID *
		; 00 00 03 88 71 1C  USER #1 *
KEY01:  MOV A,#01CH
		CJNE A,21H, KEY02
		MOV A,#071H
		CJNE A,22H, KEY02
		MOV A,#088H
		CJNE A,23H, KEY02
		MOV A,#03H
		CJNE A,24H, KEY02
		MOV A,#00H
		CJNE A,25H, KEY02
		MOV A,#00H
		CJNE A,26H, KEY02
		LJMP OPDOOR

		; 00 00 02 95 21 37 USER #2 *
KEY02:  MOV A,#037H
		CJNE A,21H, KEY50
		MOV A,#021H
		CJNE A,22H, KEY50
		MOV A,#095H
		CJNE A,23H, KEY50
		MOV A,#02H
		CJNE A,24H, KEY50
		MOV A,#00H
		CJNE A,25H, KEY50
		MOV A,#00H
		CJNE A,26H, KEY50
		LJMP OPDOOR

KEY50:  LJMP MAIN

		; TOUCHRESET SETS THE CARRY BIT IF A TOUCH MEMORY IS DETECTED *
TOCHRST:MOV A,#4
		CLR P0.0
		MOV B,#221
LOOPA:  DJNZ B,LOOPA
		SETB P0.0
		MOV B,#6
		CLR C
WAITLOW:JB P0.0, WH
		DJNZ B,WAITLOW
		DJNZ ACC,WAITLOW
		SJMP SHORT
WH:     MOV B,#111
HL:     ORL C,/P0.0
		DJNZ B,HL
SHORT:  RET 

		; SEND A BYTE AND GET A BYTE *
TBYTE:  MOV B,#8
B_LOOP: RRC A
		ACALL TBIT
		DJNZ B,B_LOOP
		RRC A
		RET
TBIT:   CLR P0.0
		NOP
		NOP
		NOP
		NOP
		MOV P0.0,C
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		MOV C,P0.0
		PUSH B
		MOV B,#12H
LOOPB:  DJNZ B, LOOPB
		POP B
		SETB P0.0
		RET

		; CRC8 CHECK A BYTE
DO_CRC: PUSH ACC
		PUSH B
		PUSH ACC
		MOV B,#8
CRC_LP: XRL A,28H
		RRC A
		MOV A,28H
		JNC ZERO
		XRL A,#18H
ZERO:   RRC A
		MOV 28H,A
		POP ACC
		RR A
		PUSH ACC
		DJNZ B,CRC_LP
		POP ACC
		POP B
		POP ACC
		RET

		; OPEN THE DOOR AND HOLD IT FOR A FEW SECONDS *
		; SET THE RELAY *
OPDOOR: SETB P1.1
		MOV B,#8
LOOP3:  MOV 29H,B
		MOV B,#255
LOOP2:  MOV 28H,B
		MOV B,#255
LOOP1:  NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		DJNZ B,LOOP1
		MOV B,28H
		DJNZ B,LOOP2
		MOV B,29H
		DJNZ B,LOOP3
		; * CLEAR THE RELAY *
		CLR P1.1
		LJMP MAIN

		.END
